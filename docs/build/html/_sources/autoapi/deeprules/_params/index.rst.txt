deeprules._params
=================

.. py:module:: deeprules._params


Attributes
----------

.. autoapisummary::

   deeprules._params.QualityMeasure
   deeprules._params.DEFAULT_PARAMS_VALUES


Classes
-------

.. autoapisummary::

   deeprules._params.BaseAlgorithmParams


Functions
---------

.. autoapisummary::

   deeprules._params.adjust_params_on_dataset


Module Contents
---------------

.. py:data:: QualityMeasure

.. py:class:: BaseAlgorithmParams

   Bases: :py:obj:`TypedDict`


   dict() -> new empty dictionary
   dict(mapping) -> new dictionary initialized from a mapping object's
       (key, value) pairs
   dict(iterable) -> new dictionary initialized as if via:
       d = {}
       for k, v in iterable:
           d[k] = v
   dict(**kwargs) -> new dictionary initialized with the name=value pairs
       in the keyword argument list.  For example:  dict(one=1, two=2)


   .. py:attribute:: min_cov
      :type:  int


   .. py:attribute:: max_uncovered_fraction
      :type:  float


   .. py:attribute:: max_layers_count
      :type:  int


   .. py:attribute:: quality_measure
      :type:  QualityMeasure


   .. py:attribute:: pruning_measure
      :type:  QualityMeasure


   .. py:attribute:: voting_measure
      :type:  QualityMeasure


   .. py:attribute:: select_best_candidate_measure
      :type:  QualityMeasure


   .. py:attribute:: enable_pruning
      :type:  bool


   .. py:attribute:: enable_attributes_conditions
      :type:  bool


   .. py:attribute:: enable_negations
      :type:  bool


.. py:data:: DEFAULT_PARAMS_VALUES
   :type:  BaseAlgorithmParams

.. py:function:: adjust_params_on_dataset(params: BaseAlgorithmParams, y: pandas.Series, problem_type: decision_rules.problem.ProblemTypes) -> BaseAlgorithmParams

